# Copyright 2019 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# This is the main configuration file for the application.
# ~~~~~

appName = "vat-sign-up"

# Fix for SSLEngine closed already exception
http-verbs.retries.ssl-engine-closed-already.enabled = true

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.graphite.GraphiteMetricsModule` or create your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here

play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret = "4yPtzBDvoY0VFKEry0e3zdFyIQcWUoqNkBWDuLwJwyMAcjSLht0D3MyPs2skydps"

# Session configuration
# ~~~~~
application.session.httpOnly = false
application.session.secure = false

# The application languages
# ~~~~~
application.langs = "en"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router = prod.Routes


# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

}


# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}


# Microservice specific config

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}


mongodb {
  uri = "mongodb://localhost:27017/vat-sign-up"
  timeToLiveSeconds = 86400
  email {
    # 30 days
    emailTimeToLiveSeconds = 2592000
  }
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {

    base {
      host = localhost
      port = 9572
    }

    auth {
      host = localhost
      port = 8500
    }

    agent-client-relationships {
      url = "http://localhost:9564"
      stub-url = "http://localhost:9564"
    }

    tax-enrolments {
      host = localhost
      port = 9995
    }

    email-verification {
      host = localhost
      port = 9891
    }

    des {
      url = "http://localhost:9564"
      stub-url = "http://localhost:9564"
      environment = "dev"
      authorisation-token = "dev"
    }

    authenticator {
      host = localhost
      port = 9905
    }

    identity-verification-frontend {
      host = localhost
      #Stub implem.
      port = 9948
    }

    vat-sign-up-frontend {
      url = "http://localhost:9566"
    }

    vat-subscription {
      # should point to our stub in local, dev and staging
      host = localhost
      port = 9564
    }

    email {
      host = localhost
      port = 8300
    }

    enrolment-store-proxy {
      host = localhost
      port = 9595
    }

    users-groups-search {
      host = localhost
      port = 9984
    }
  }
}

control-list {

  below_vat_threshold {
    eligible = true
    migratable = true
  }
  annual_stagger {
    eligible = false
    migratable = true
  }
  missing_returns {
    eligible = false
    migratable = true
  }
  central_assessments {
    eligible = true
    migratable = true
  }
  criminal_investigation_inhibits {
    eligible = false
    migratable = true
  }
  compliance_penalties_or_surcharges {
    eligible = true
    migratable = true
  }
  insolvency {
    eligible = false
    migratable = true
  }
  dereg_or_death {
    eligible = false
    migratable = true
  }
  debt_migration {
    eligible = false
    migratable = true
  }
  direct_debit {
    eligible = true
    migratable = true
  }
  eu_sales_or_purchases {
    eligible = false
    migratable = true
  }
  large_business {
    eligible = false
    migratable = true
  }
  missing_trader {
    eligible = false
    migratable = true
  }
  monthly_stagger {
    eligible = true
    migratable = true
  }
  none_standard_tax_period {
    eligible = true
    migratable = true
  }
  overseas_trader {
    eligible = true
    migratable = true
  }
  poa_trader {
    eligible = false
    migratable = true
  }
  stagger_1 {
    eligible = true
    migratable = true
  }
  stagger_2 {
    eligible = true
    migratable = true
  }
  stagger_3 {
    eligible = true
    migratable = true
  }
  company {
    eligible = true
    migratable = true
  }
  division {
    eligible = false
    migratable = true
  }
  group {
    eligible = false
    migratable = true
  }
  partnership {
    eligible = false
    migratable = true
  }
  public_corporation {
    eligible = false
    migratable = true
  }
  sole_trader {
    eligible = true
    migratable = true
  }
  local_authority {
    eligible = false
    migratable = true
  }
  non_profit {
    eligible = false
    migratable = true
  }
  dific_trader {
    eligible = false
    migratable = true
  }
  anything_under_appeal {
    eligible = false
    migratable = true
  }
  repayment_trader {
    eligible = false
    migratable = true
  }
  oss_trader {
    eligible = false
    migratable = true
  }
  flat_rate {
    eligible = false
    migratable = true
  }
  pending_oa {
    eligible = true
    migratable = false
  }

}

dd-config = """{
  "Stagger1": [
    {
      "startDate": "2018-10-18",
      "endDate": "2018-11-13"
    },
    {
      "startDate": "2019-01-18",
      "endDate": "2019-02-13"
    }
  ],
  "Stagger2": [
    {
      "startDate": "2018-11-17",
      "endDate": "2018-12-13"
    },
    {
      "startDate": "2019-02-15",
      "endDate": "2019-03-13"
    }
  ],
  "Stagger3": [
    {
      "startDate": "2018-12-13",
      "endDate": "2019-01-13"
    },
    {
      "startDate": "2019-03-16",
      "endDate": "2019-04-11"
    }
  ]
}"""

filing-config = """{
  "Stagger1": [
  {
    "startDate": "2018-10-18",
    "endDate": "2018-11-13"
  }
  ],
  "Stagger2": [],
  "Stagger3": []
}"""
//TODO: Add filing dates when available
